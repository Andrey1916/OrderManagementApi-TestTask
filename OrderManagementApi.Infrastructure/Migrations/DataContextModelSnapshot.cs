// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagementApi.Infrastructure.Database;

#nullable disable

namespace OrderManagementApi.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderManagementApi.Infrastructure.Database.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrdersCount")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6411984-7481-4aed-9e34-2a28036577d9"),
                            Email = "mail@mail.com",
                            FirstName = "FName1",
                            LastName = "LName1",
                            OrdersCount = 0L,
                            PhoneNumber = "1234567890"
                        });
                });

            modelBuilder.Entity("OrderManagementApi.Infrastructure.Database.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bb5f0e7-ab8d-4767-a264-9e0fe9fab4a5"),
                            CreateDate = new DateTime(2023, 8, 18, 15, 26, 21, 188, DateTimeKind.Utc).AddTicks(7640),
                            CustomerId = new Guid("f6411984-7481-4aed-9e34-2a28036577d9"),
                            DeliveryAddress = "Some Address",
                            Description = "Description",
                            Status = 2,
                            UpdateDate = new DateTime(2023, 8, 18, 15, 26, 21, 188, DateTimeKind.Utc).AddTicks(7640)
                        });
                });

            modelBuilder.Entity("OrderManagementApi.Infrastructure.Database.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductName");

                    b.ToTable("OrderItems", (string)null);

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("8bb5f0e7-ab8d-4767-a264-9e0fe9fab4a5"),
                            ProductName = "Test",
                            Count = 1L,
                            Price = 100m
                        },
                        new
                        {
                            OrderId = new Guid("8bb5f0e7-ab8d-4767-a264-9e0fe9fab4a5"),
                            ProductName = "Test3",
                            Count = 15L,
                            Price = 100m
                        });
                });

            modelBuilder.Entity("OrderManagementApi.Infrastructure.Database.Entities.Order", b =>
                {
                    b.HasOne("OrderManagementApi.Infrastructure.Database.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OrderManagementApi.Infrastructure.Database.Entities.OrderItem", b =>
                {
                    b.HasOne("OrderManagementApi.Infrastructure.Database.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderManagementApi.Infrastructure.Database.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrderManagementApi.Infrastructure.Database.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
